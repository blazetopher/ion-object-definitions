package net.ooici.services.coi;

import "net/ooici/core/link/link.proto";

enum LifeCycleState {
    New=1;
    Active=2;
    Inactive=3;
    Commissioned=4;
    Decommissioned=5;
    Retired=6;
    Developed=7;
}


message ExchangeSpace {
    enum _MessageTypeIdentifier {
      _ID = 1001;
      _VERSION = 1;
    }
    required string name = 1;
    required string description = 2;
}

message ExchangeName {
    enum _MessageTypeIdentifier {
      _ID = 1002;
      _VERSION = 1;
    }
    enum Type {
        PROCESS = 1;
        SERVICE = 2;
        EXCHANGE_POINT = 3;
        QUEUE = 4;
    }
    required string name = 1;
    required string description = 2;
    required Type type = 3;
 	required ExchangeSpace exchangespace = 4;
    required AMQPExchangeMapping mapping = 5;
}

message Queue {
    enum _MessageTypeIdentifier {
      _ID = 1003;
      _VERSION = 1;
    }
    required AMQPQueueMapping mapping = 1;
}

message Binding {
    enum _MessageTypeIdentifier {
      _ID = 1004;
      _VERSION = 1;
    }
}


message AMQPExchangeMapping {
    enum _MessageTypeIdentifier {
      _ID = 1005;
      _VERSION = 1;
    }
    enum ExchangeType {
        DIRECT = 0;
        FANOUT = 1;
        TOPIC = 2;
    }
    enum DeliveryMode {
        TRANSIENT = 1;
        PERSISTENT = 2;
    }
    required string exchangename = 1;  // name="exchange" 
    required ExchangeType type = 2;
    required bool passive = 3;
    required bool durable = 4;
    required bool autodelete = 5;      // name="auto delete"
    required bool internal = 6;
    required bool nowait = 7;
}

message AMQPQueueMapping {

    enum _MessageTypeIdentifier {
      _ID = 1006;
      _VERSION = 1;
    }
    enum ExchangeType {
        DIRECT = 0;
        FANOUT = 1;
        TOPIC = 2;
    }
    enum DeliveryMode {
        TRANSIENT = 1;
        PERSISTENT = 2;
    }
    required string queuename = 1;   // name="queue" 
	required bool passive = 2;
	required bool durable = 3;
	required bool exclusive = 4;
	required bool autodelete = 5;
}

message AMQPBrokerCredentials {
    enum _MessageTypeIdentifier {
      _ID = 1007;
      _VERSION = 1;
    }

	// Based on the RabbitMQ 2.2 Java client.

    required string brokername = 1;
    required string host = 2;
    required int32  port = 3;
    required int32 channelmax = 4;
    required int32 framemax = 5;
    required int32 heartbeat = 6;
    required string username = 7;
    required string password = 8;
    required bool sslprotocol = 9;
}

message BrokerFederation {
    enum _MessageTypeIdentifier {
      _ID = 1008;
      _VERSION = 1;
    }
    required string name = 1;
    required string description = 2;
}
