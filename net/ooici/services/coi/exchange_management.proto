package net.ooici.services.coi;

import "net/ooici/core/link/link.proto";

enum LifeCycleState {
    New=1;
    Active=2;
    Inactive=3;
    Commissioned=4;
    Decommissioned=5;
    Retired=6;
    Developed=7;
}


message ExchangeSpace {
    enum _MessageTypeIdentifier {
      _ID = 1001;
      _VERSION = 1;
    }
    optional string name = 1;
    optional string description = 2;
}

message ExchangeName {
    enum _MessageTypeIdentifier {
      _ID = 1002;
      _VERSION = 1;
    }
    enum Type {
        PROCESS = 1;
        SERVICE = 2;
        EXCHANGE_POINT = 3;
        QUEUE = 4;
    }
    optional string name = 1;
    optional string description = 2;
    optional Type type = 3;
 	optional ExchangeSpace exchangespace = 4;
    optional AMQPExchangeMapping mapping = 5;
}

message Queue {
    enum _MessageTypeIdentifier {
      _ID = 1003;
      _VERSION = 1;
    }
    optional AMQPQueueMapping mapping = 1;
}

message Binding {
    enum _MessageTypeIdentifier {
      _ID = 1004;
      _VERSION = 1;
    }
}


message AMQPExchangeMapping {
    enum _MessageTypeIdentifier {
      _ID = 1005;
      _VERSION = 1;
    }
    enum ExchangeType {
        DIRECT = 0;
        FANOUT = 1;
        TOPIC = 2;
    }
    enum DeliveryMode {
        TRANSIENT = 1;
        PERSISTENT = 2;
    }
    optional string exchangename = 1;  // name="exchange" 
    optional ExchangeType type = 2;
    optional bool passive = 3;
    optional bool durable = 4;
    optional bool autodelete = 5;      // name="auto delete"
    optional bool internal = 6;
    optional bool nowait = 7;
}

message AMQPQueueMapping {

    enum _MessageTypeIdentifier {
      _ID = 1006;
      _VERSION = 1;
    }
    enum ExchangeType {
        DIRECT = 0;
        FANOUT = 1;
        TOPIC = 2;
    }
    enum DeliveryMode {
        TRANSIENT = 1;
        PERSISTENT = 2;
    }
    optional string queuename = 1;   // name="queue" 
	optional bool passive = 2;
	optional bool durable = 3;
	optional bool exclusive = 4;
	optional bool autodelete = 5;
}

message AMQPBrokerCredentials {
    enum _MessageTypeIdentifier {
      _ID = 1007;
      _VERSION = 1;
    }

	// Based on the RabbitMQ 2.2 Java client.

    optional string brokername = 1;
    optional string host = 2;
    optional int32  port = 3;
    optional int32 channelmax = 4;
    optional int32 framemax = 5;
    optional int32 heartbeat = 6;
    optional string username = 7;
    optional string password = 8;
    optional bool sslprotocol = 9;
}

message BrokerFederation {
    enum _MessageTypeIdentifier {
      _ID = 1008;
      _VERSION = 1;
    }
    optional string name = 1;
    optional string description = 2;
}

message HardwareMapping {
    enum _MessageTypeIdentifier {
      _ID = 1009;
      _VERSION = 1;
    }
    optional string name = 1;
    optional string description = 2;
}
