package net.ooici.play;

// An example of three message A,B,C which express a type id and version using
// a convention based on the ENUM provided by protocol buffers.

message A{
	enum _MessageTypeIdentifier {
		_ID = 1;
		_VERSION = 1;
	}
	optional double afield = 1;
	
	// By convention, use only lower-case names for message fields
	//   to avoid conflicts with the Message Type Identifier and
	//   preexisting or generated keywords/fields
	optional double id = 2;
	optional string messagetypeidentifier = 3; 
}

message B{
	enum _MessageTypeIdentifier {
		_ID = 2;
		_VERSION = 1;
	}
	
	required double bfield = 1;
}

message C{
	enum _MessageTypeIdentifier {
		_ID = 3;
		_VERSION = 1;
	}
	
	required double cfield = 1;
}
