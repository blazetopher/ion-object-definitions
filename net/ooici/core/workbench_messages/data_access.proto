package net.ooici.core.workbench_messages;

import "net/ooici/core/link/link.proto";
import "net/ooici/cdm/syntactic/cdmvariable.proto";

message DataRequestMessage {
    enum _MessageTypeIdentifier {
        _ID = 53;
        _VERSION = 1;
    }

    // This is a particular state of a structure array object (under a variable) which is stored in the data store - pass by reference
    optional bytes structure_array_ref = 1;

    // This is the index bounds requested for the structure_array_ref.
    repeated net.ooici.cdm.syntactic.Bounds request_bounds = 2;

    // This is the routing key that data messages should be sent to.
    optional string data_routing_key = 3;
}

message DataReplyMessage {
    // this is the RPC reply of DataRequestMessage.
    enum _MessageTypeIdentifier {
        _ID = 54;
        _VERSION = 1;
    }

    // Here I want to pass you back the actual content - so build a data structure using CASREFS
    // @TODO: bounded_arrays makes it sound repeated, needs rename
    // if no data, what actually gets passed back here?
    optional net.ooici.core.link.CASRef bounded_arrays = 1;
}

message DataChunkMessage {
    // this is an actual chunk of data, sent in one or many parts, as a result of DataRequestMessage.
    // one or more should be sent before responding via DataReplyMessage.
    enum _MessageTypeIdentifier {
        _ID = 57;
        _VERSION = 1;
    }

    optional int32 seq_number = 1;      // Number of the data sequence this is.
    optional int32 seq_max    = 2;      // Maximum number of data messages in this data sequence.

    optional bool done = 3;             // @TODO: sequencing is Hard (tm), use the done flag to indicate done-ness.

    // the next two fields are repeated as there may be many of these data slices available.
    // the rank of these two fields must be the same.

    repeated int32 start_index = 4;     // The starting index of this ndarray in terms of the original request's
                                        // bounds.

    repeated net.ooici.core.link.CASRef ndarray = 5;    // actual data in this message.  Should link to one of the 
                                                        // array types defined in cdmarray.proto.
}

message GetObjectRequestMessage {
    enum _MessageTypeIdentifier {
        _ID = 55;
        _VERSION = 1;
    }

    // An IDRef of the desired object: can specify branch and commit
    optional net.ooici.core.link.CASRef object_id = 1;

    // The GPBType(s) that are excluded from the returned object
    repeated net.ooici.core.link.CASRef excluded_object_types = 2;
}

message GetObjectReplyMessage {
    enum _MessageTypeIdentifier {
        _ID = 56;
        _VERSION = 1;
    }

    // An object containing the requested object
    optional net.ooici.core.link.CASRef retrieved_object = 1;

    // The GPBType(s) that are excluded from the returned object
    repeated net.ooici.core.link.CASRef excluded_object_types = 2;
}
